import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.databind.JsonSerializer;
import com.fasterxml.jackson.databind.SerializerProvider;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.jayway.jsonpath.JsonPath;
import net.minidev.json.JSONArray;
import java.io.IOException;
import java.util.Map;

public class JsonPathFilteringSerializer<T> extends JsonSerializer<T> {
    private final Map<String, String> jsonPathFilters;
    private final Class<T> targetClass;
    private final ObjectMapper objectMapper = new ObjectMapper();

    public JsonPathFilteringSerializer(Map<String, String> jsonPathFilters, Class<T> targetClass) {
        this.jsonPathFilters = jsonPathFilters;
        this.targetClass = targetClass;
    }

    @Override
    public void serialize(T value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
        if (value == null) {
            gen.writeNull();
            return;
        }

        // Convert the entire object to JSON string for JSONPath evaluation
        String jsonString = objectMapper.writeValueAsString(value);

        System.out.println("Original JSON:\n" + jsonString);

        Object filteredResult = jsonString; // Default to original JSON if no filtering is applied

        // Apply JSONPath filtering globally to the entire JSON structure
        for (Map.Entry<String, String> entry : jsonPathFilters.entrySet()) {
            try {
                System.out.println("Applying JSONPath: " + entry.getValue());
                filteredResult = JsonPath.read(jsonString, entry.getValue());

                // Convert JSONArray to a single object if applicable
                if (filteredResult instanceof JSONArray && ((JSONArray) filteredResult).size() == 1) {
                    filteredResult = ((JSONArray) filteredResult).get(0);
                }

                System.out.println("Filtered JSON Output:\n" + objectMapper.writeValueAsString(filteredResult));
            } catch (Exception e) {
                System.err.println("JSONPath Evaluation Error: " + e.getMessage());
                filteredResult = jsonString; // If JSONPath fails, return original JSON
            }
        }

        // Convert JSONPath result back to the target class
        JavaType javaType = objectMapper.getTypeFactory().constructType(targetClass);
        T typedResult = objectMapper.convertValue(filteredResult, javaType);

        if (typedResult == null) {
            System.err.println("WARNING: Failed to convert JSONPath result. Writing original value.");
            gen.writeObject(value);
        } else {
            gen.writeObject(typedResult);
        }
    }
}
